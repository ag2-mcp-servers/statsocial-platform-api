# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T09:59:32+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field, RootModel


class Field400Error(BaseModel):
    error_code_msg: Optional[str] = None
    msg: Optional[str] = None
    success: Optional[str] = 'false'


class Field401Error(BaseModel):
    error_code_msg: Optional[str] = None
    msg: Optional[str] = None
    success: Optional[str] = 'false'


class Field403Error(BaseModel):
    error_code_msg: Optional[str] = None
    msg: Optional[str] = None
    success: Optional[str] = 'false'


class Field404Error(BaseModel):
    error_code_msg: Optional[str] = None
    msg: Optional[str] = None
    success: Optional[str] = 'false'


class Field500Error(BaseModel):
    error_code_msg: Optional[str] = None
    msg: Optional[str] = None
    success: Optional[str] = 'false'


class ReportDates(BaseModel):
    data: Optional[List[int]] = None
    msg: Optional[str] = 'success'
    success: Optional[str] = 'true'


class ReportStatus(BaseModel):
    msg: Optional[str] = None
    success: Optional[str] = 'true'


class CreateTweetResponse(BaseModel):
    aggregate_report_hash: Optional[str] = None
    daily_report_hash: Optional[str] = None
    monthly_report_hash: Optional[str] = None
    weekly_report_hash: Optional[str] = None


class CustomCreateResponse(BaseModel):
    report_hash: Optional[str] = None


class CustomGenerateResponse(BaseModel):
    upload_hash: Optional[str] = None


class CustomInsertResponse(BaseModel):
    distinct_relations: Optional[int] = None
    total_relations: Optional[int] = None


class FollowerCreateResponse(BaseModel):
    report_hash: Optional[str] = None


class ReportInfo(BaseModel):
    created: Optional[str] = None
    name: Optional[str] = None
    report_type: Optional[str] = None
    status: Optional[str] = None


class StatisticalInfo18(BaseModel):
    error_range: Optional[int] = None
    lower_bound: Optional[int] = None
    upper_bound: Optional[int] = None


class StatisticalInfo25(BaseModel):
    error_range: Optional[int] = None
    lower_bound: Optional[int] = None
    upper_bound: Optional[int] = None


class StatisticalInfo35(BaseModel):
    error_range: Optional[int] = None
    lower_bound: Optional[int] = None
    upper_bound: Optional[int] = None


class StatisticalInfoF(BaseModel):
    error_range: Optional[int] = None
    lower_bound: Optional[int] = None
    upper_bound: Optional[int] = None


class StatisticalInfoM(BaseModel):
    error_range: Optional[int] = None
    lower_bound: Optional[int] = None
    upper_bound: Optional[int] = None


class Ids(RootModel[List]):
    root: List


class Field1824(BaseModel):
    average: Optional[int] = None
    multiplicity: Optional[int] = None
    percentile: Optional[int] = None
    statistical_info: Optional[StatisticalInfo18] = None
    stdev: Optional[int] = None
    value: Optional[int] = None


class Field2534(BaseModel):
    average: Optional[int] = None
    multiplicity: Optional[int] = None
    percentile: Optional[int] = None
    statistical_info: Optional[StatisticalInfo25] = None
    stdev: Optional[int] = None
    value: Optional[int] = None


class Field3544(BaseModel):
    average: Optional[int] = None
    multiplicity: Optional[int] = None
    percentile: Optional[int] = None
    statistical_info: Optional[StatisticalInfo35] = None
    stdev: Optional[int] = None
    value: Optional[int] = None


class CombinedAge(BaseModel):
    field_18___24: Optional[Field1824] = Field(None, alias='18 - 24')
    field_25___34: Optional[Field2534] = Field(None, alias='25 - 34')
    field_35___44: Optional[Field3544] = Field(None, alias='35 - 44')


class CreateTweet(BaseModel):
    data: Optional[CreateTweetResponse] = None
    msg: Optional[str] = 'success'
    success: Optional[str] = 'true'


class CreateTwitter(BaseModel):
    data: Optional[FollowerCreateResponse] = None
    msg: Optional[str] = 'success'
    success: Optional[str] = 'true'


class CustomCreate(BaseModel):
    data: Optional[CustomCreateResponse] = None
    msg: Optional[str] = 'success'
    success: Optional[str] = 'true'


class CustomGenerate(BaseModel):
    data: Optional[CustomGenerateResponse] = None
    msg: Optional[str] = 'success'
    success: Optional[str] = 'true'


class CustomInsert(BaseModel):
    data: Optional[CustomInsertResponse] = None
    msg: Optional[str] = 'success'
    success: Optional[str] = 'true'


class Female(BaseModel):
    average: Optional[int] = None
    multiplicity: Optional[int] = None
    percentile: Optional[int] = None
    statistical_info: Optional[StatisticalInfoF] = None
    stdev: Optional[int] = None
    value: Optional[int] = None


class Male(BaseModel):
    average: Optional[int] = None
    multiplicity: Optional[int] = None
    percentile: Optional[int] = None
    statistical_info: Optional[StatisticalInfoM] = None
    stdev: Optional[int] = None
    value: Optional[int] = None


class Sex(BaseModel):
    Female_1: Optional[Female] = Field(None, alias='Female')
    Male_1: Optional[Male] = Field(None, alias='Male')


class ApplicationResponse(BaseModel):
    remaining_count: Optional[int] = None
    reports: Optional[ReportInfo] = None
    total_reports_count: Optional[int] = None
    total_reports_done: Optional[int] = None


class ReportResponse(BaseModel):
    Combined_Age: Optional[CombinedAge] = Field(None, alias='Combined Age')
    Sex_1: Optional[Sex] = Field(None, alias='Sex')


class ApplicationStatus(BaseModel):
    data: Optional[ApplicationResponse] = None
    msg: Optional[str] = 'success'
    success: Optional[str] = 'true'


class ReportSuccess(BaseModel):
    data: Optional[ReportResponse] = None
    msg: Optional[str] = 'success'
    success: Optional[str] = 'true'
